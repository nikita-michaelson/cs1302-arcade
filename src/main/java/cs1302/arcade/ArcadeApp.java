package cs1302.arcade;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.event.EventHandler;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseEvent;
import javafx.scene.text.Text;
import javafx.scene.control.Button;
import javafx.scene.layout.VBox;
import javafx.scene.layout.HBox;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.layout.GridPane;
import javafx.scene.image.ImageView;
import javafx.scene.image.Image;
import javafx.scene.text.Text;
import javafx.scene.control.Label;
import javafx.stage.Modality;
import javafx.scene.paint.Color;
public class ArcadeApp extends Application {

    Image intro = new Image("frogger/introImage.png");
    ImageView introView = new ImageView(intro);
    /**
     * Return a key event handler that moves to the rectangle to the left
     * or the right depending on what key event is generated by the associated
     * node.
     * @return the key event handler
     */
/*
    private EventHandler<? super KeyEvent> createKeyHandlerTwenty() {
	return event -> {
	    System.out.println(event);
	    if (event.getCode() == KeyCode.LEFT)
        {

        }
	    if (event.getCode() == KeyCode.RIGHT) r.setX(r.getX() + 10.0);
	    // TODO bounds checking
	};
    } // createKeyHandler
*/
    Scene twenty;
    GridPane grid;
    boolean whichGame = false;//when false, its 2048 , when true its, frogger
    int[][] cell;
    //frogger instance variables
    Stage frogStage; 
    Stage stage;


    /** {@inheritdoc} */
    @Override
    public void start(Stage stage) {

        /* You are allowed to rewrite this start method, add other methods,
         * files, classes, etc., as needed. This currently contains some
         * simple sample code for mouse and keyboard interactions with a node
         * (rectangle) in a group.
         */

        HBox hbox = new HBox();
        Text t = new Text ("Pick a Game");
        Button frogButton = new Button();
//        Image frogImage = new Image("frogger/froggerLogo.png",400,400,false,false);
        //      frogButton.setGraphic(new ImageView(frogImage));
        Button tf8 = new Button();
        // Image twentyImage = new Image("frogger/2048logo.png",400,400,false,false);
        // tf8.setGraphic(new ImageView(twentyImage));
        EventHandler<ActionEvent> tf = event -> {
            Stage twentyStage = new Stage();
            setTF8();
            twentyStage.setScene(twenty);
            twentyStage.initModality(Modality.WINDOW_MODAL);
            twentyStage.initOwner(stage);
            twentyStage.sizeToScene();

            twentyStage.show();
        };
        tf8.setOnAction(tf);

        EventHandler<ActionEvent> frogButtonAction = event -> {
            ArcadeFrog frogger = new ArcadeFrog();
            frogStage = new Stage();
            frogStage.setScene(frogger.initScene());
            frogStage.initModality(Modality.WINDOW_MODAL);
            frogStage.initOwner(stage);
            frogStage.sizeToScene();
            frogStage.show();

        };
        frogButton.setOnAction(frogButtonAction);
        //hbox.setStyle("-fx-background-color :black;");
        hbox.getChildren().addAll(frogButton,tf8);
        Scene scene = new Scene(hbox);
        stage.setTitle("Welcome to our arcade !!!");
        stage.setScene(scene);
        stage.sizeToScene();
        stage.show();

    } // start


    public void setTF8(){
        HBox hbox = new HBox();
        grid = new GridPane();
        grid.setPrefSize(400,400);
        grid.setGridLinesVisible(true);
        //start image method
        //Adds all blanks except to one random
        hbox.getChildren().add(grid);
        twenty = new Scene(hbox,500,500);
        //twenty.add(hbox);
    }
    public void startTF(){
        cell = new int[4][4];
//random on these
        int row= 0;
        int col = 0;
        for(int i = 0; i < 4; i++){
            for(int j= 0; j < 4; j++){
                if(row == i && col == j){
                    //add 2 to gridpane
                }
                else{
                    //add blank
                }
            }
        }
    }
   
} // ArcadeApp
